{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Logs yellow": {
    "prefix": "logsy",
    "body": [
      "console.log(require('chalk').white.bold('=Line: $TM_LINE_NUMBER-File: ${TM_FILENAME/(.*)\\..+$/$1/}============$1================='));",
      "console.log(require('chalk').yellow.bold(JSON.stringify($1, null, '  ')));//eslint-disable-line",
      "console.log(require('chalk').white.bold('=================End-$1=================='));"
    ]
  },
  "Get full object": {
    "prefix": "uti",
    "body": [
      "console.log(require('chalk').white.bold('=Line: $TM_LINE_NUMBER-File: ${TM_FILENAME/(.*)\\..+$/$1/}============$1================='));",
      "console.log(require('chalk').white.bold(require('util').inspect($1, false, null)));",
      "console.log(require('chalk').white.bold('=================End-$1=================='));"
    ]
  },
  "Log something work": {
    "prefix": "fine",
    "body": [
      "console.log(require('chalk').magenta.bold('============Line $TM_LINE_NUMBER ${TM_FILENAME/(.*)\\..+$/$1/} - ùìòùìΩ ùîÄùì∏ùìªùì¥ùìº „Ä†!============'));//eslint-disable-line"
    ]
  },
  "Log blue": {
    "prefix": "logb",
    "body": [
      "console.log(require('chalk').white.bold('=Line: $TM_LINE_NUMBER-File: ${TM_FILENAME/(.*)\\..+$/$1/}============$1================='));",
      "console.log(require('chalk').yellow.bold($1));//eslint-disable-line",
      "console.log(require('chalk').white.bold('=================End-$1=================='));"
    ]
  },
  "Jest true": {
    "prefix": "jj",
    "body": ["expect(1).toBe(1);"]
  },
  "Log dir": {
    "prefix": "csd",
    "body": [
      "console.log(require('chalk').white.bold('=================End-$1=================='));",
      "console.dir($1, { depth: null });",
      "console.log(require('chalk').white.bold('=================End-$1=================='));"
    ]
  },
  "Exit 0": {
    "prefix": "px0",
    "body": ["process.exit(0)"]
  },
  "JSON stringify Obj": {
    "prefix": "jso",
    "body": ["JSON.stringify($1)"]
  },
  "Jest expect object equal": {
    "prefix": "joe",
    "body": ["expect($1).toEqual();"]
  },
  "Jest expect toBe": {
    "prefix": "jet",
    "body": ["expect($1).toBe();"]
  },
  "Jest expect toMatchObject": {
    "prefix": "jot",
    "body": ["expect($1).toMatchObject();"]
  }
}
